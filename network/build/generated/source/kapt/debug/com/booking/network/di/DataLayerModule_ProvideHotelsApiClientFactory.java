// Generated by Dagger (https://dagger.dev).
package com.booking.network.di;

import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.booking.network.di.HotelsAnnotation")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataLayerModule_ProvideHotelsApiClientFactory implements Factory<Retrofit> {
  private final Provider<Gson> gsonProvider;

  private final Provider<OkHttpClient> clientProvider;

  public DataLayerModule_ProvideHotelsApiClientFactory(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> clientProvider) {
    this.gsonProvider = gsonProvider;
    this.clientProvider = clientProvider;
  }

  @Override
  public Retrofit get() {
    return provideHotelsApiClient(gsonProvider.get(), clientProvider.get());
  }

  public static DataLayerModule_ProvideHotelsApiClientFactory create(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> clientProvider) {
    return new DataLayerModule_ProvideHotelsApiClientFactory(gsonProvider, clientProvider);
  }

  public static Retrofit provideHotelsApiClient(Gson gson, OkHttpClient client) {
    return Preconditions.checkNotNullFromProvides(DataLayerModule.INSTANCE.provideHotelsApiClient(gson, client));
  }
}
