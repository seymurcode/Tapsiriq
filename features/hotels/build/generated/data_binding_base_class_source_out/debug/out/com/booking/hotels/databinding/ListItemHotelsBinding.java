// Generated by view binder compiler. Do not edit!
package com.booking.hotels.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.booking.hotels.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemHotelsBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView centerDistance;

  @NonNull
  public final TextView dayCount;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView34;

  @NonNull
  public final ImageView imageView345;

  @NonNull
  public final TextView includeType;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView rating;

  @NonNull
  public final TextView ratingType;

  @NonNull
  public final TextView roomType;

  private ListItemHotelsBinding(@NonNull MaterialCardView rootView, @NonNull TextView address,
      @NonNull TextView centerDistance, @NonNull TextView dayCount, @NonNull ImageView imageView,
      @NonNull ImageView imageView3, @NonNull ImageView imageView34,
      @NonNull ImageView imageView345, @NonNull TextView includeType, @NonNull TextView name,
      @NonNull TextView price, @NonNull TextView rating, @NonNull TextView ratingType,
      @NonNull TextView roomType) {
    this.rootView = rootView;
    this.address = address;
    this.centerDistance = centerDistance;
    this.dayCount = dayCount;
    this.imageView = imageView;
    this.imageView3 = imageView3;
    this.imageView34 = imageView34;
    this.imageView345 = imageView345;
    this.includeType = includeType;
    this.name = name;
    this.price = price;
    this.rating = rating;
    this.ratingType = ratingType;
    this.roomType = roomType;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemHotelsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemHotelsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_hotels, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemHotelsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.center_distance;
      TextView centerDistance = ViewBindings.findChildViewById(rootView, id);
      if (centerDistance == null) {
        break missingId;
      }

      id = R.id.day_count;
      TextView dayCount = ViewBindings.findChildViewById(rootView, id);
      if (dayCount == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView34;
      ImageView imageView34 = ViewBindings.findChildViewById(rootView, id);
      if (imageView34 == null) {
        break missingId;
      }

      id = R.id.imageView345;
      ImageView imageView345 = ViewBindings.findChildViewById(rootView, id);
      if (imageView345 == null) {
        break missingId;
      }

      id = R.id.include_type;
      TextView includeType = ViewBindings.findChildViewById(rootView, id);
      if (includeType == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.rating;
      TextView rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.rating_type;
      TextView ratingType = ViewBindings.findChildViewById(rootView, id);
      if (ratingType == null) {
        break missingId;
      }

      id = R.id.room_type;
      TextView roomType = ViewBindings.findChildViewById(rootView, id);
      if (roomType == null) {
        break missingId;
      }

      return new ListItemHotelsBinding((MaterialCardView) rootView, address, centerDistance,
          dayCount, imageView, imageView3, imageView34, imageView345, includeType, name, price,
          rating, ratingType, roomType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
