// Generated by Dagger (https://dagger.dev).
package com.booking.account.register;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import error.NonExistentClass;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RegisterViewModel_Factory implements Factory<RegisterViewModel> {
  private final Provider<NonExistentClass> repositoryProvider;

  private final Provider<NonExistentClass> firebaseRepositoryProvider;

  private final Provider<NonExistentClass> firebaseAuthRepositoryProvider;

  private final Provider<Context> appContextProvider;

  public RegisterViewModel_Factory(Provider<NonExistentClass> repositoryProvider,
      Provider<NonExistentClass> firebaseRepositoryProvider,
      Provider<NonExistentClass> firebaseAuthRepositoryProvider,
      Provider<Context> appContextProvider) {
    this.repositoryProvider = repositoryProvider;
    this.firebaseRepositoryProvider = firebaseRepositoryProvider;
    this.firebaseAuthRepositoryProvider = firebaseAuthRepositoryProvider;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public RegisterViewModel get() {
    return newInstance(repositoryProvider.get(), firebaseRepositoryProvider.get(), firebaseAuthRepositoryProvider.get(), appContextProvider.get());
  }

  public static RegisterViewModel_Factory create(Provider<NonExistentClass> repositoryProvider,
      Provider<NonExistentClass> firebaseRepositoryProvider,
      Provider<NonExistentClass> firebaseAuthRepositoryProvider,
      Provider<Context> appContextProvider) {
    return new RegisterViewModel_Factory(repositoryProvider, firebaseRepositoryProvider, firebaseAuthRepositoryProvider, appContextProvider);
  }

  public static RegisterViewModel newInstance(NonExistentClass repository,
      NonExistentClass firebaseRepository, NonExistentClass firebaseAuthRepository,
      Context appContext) {
    return new RegisterViewModel(repository, firebaseRepository, firebaseAuthRepository, appContext);
  }
}
